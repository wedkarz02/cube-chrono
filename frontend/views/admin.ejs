<!DOCTYPE html>
<html lang="pl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Panel Administratora - Cube Chrono</title>
    <link rel="stylesheet" href="style.css">
    <script>

        const isAdmin = true;
    </script>
</head>
<body>
<header>
    <h1>Panel Administratora</h1>
    <div class="auth-links">
        <a href="/">Strona Główna</a>
    </div>
</header>

<main>
    <section id="admin-panel" style="display: none;">
        <h2>Zarządzanie Użytkownikami</h2>
        <% if (accounts && accounts.length > 0) { %>
            <table class="admin-table">
                <thead>
                <tr>
                    <th>ID</th>
                    <th>Nazwa Użytkownika</th>
                    <th>Rola</th>
                    <th>Akcje</th>
                </tr>
                </thead>
                <tbody>
                <% accounts.forEach(account => { %>
                    <tr>
                        <td><%= account.id %></td>
                        <td><%= account.username %></td>
                        <td><%= account.roles.join(", ") %></td>
                        <td>
                            <button class="delete-btn" data-id="<%= account.id %>">Usuń</button>
                        </td>
                    </tr>
                <% }) %>
                </tbody>
            </table>
        <% } else { %>
            <p>Nie udało się wczytać użytkowników.</p>
        <% } %>
    </section>

    <section id="access-denied" style="display: none;">
        <h2>Brak Dostępu</h2>
        <p>Nie masz uprawnień do przeglądania tej strony. Zaloguj się jako administrator.</p>
        <a href="/login" class="btn-login">Zaloguj się</a>
    </section>
</main>

<footer>
    <p>&copy; 2024 Cube Chrono. Wszystkie prawa zastrzeżone.</p>
</footer>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        if (isAdmin) {
            document.getElementById('admin-panel').style.display = 'block';
        } else {
            document.getElementById('access-denied').style.display = 'block';
        }
    });
</script>
<script>
    async function getAllUsers() {
        try {
            const response = await fetch(`http://localhost:3000/all-users`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                let errorMessage = (await response.json()).error;
                alert(errorMessage);
                return;
            }

            const jsonResult = await response.json();
            console.log(jsonResult);
        } catch (error) {
            console.error(error)
            alert(error);
        }
    }

    async function getSession(session_id) {
        try {
            const data = {
                session_id: session_id
            };

            const response = await fetch(`http://localhost:3000/session`, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                let errorMessage = (await response.json()).error;
                alert(errorMessage);
                return;
            }

            const jsonResult = await response.json();
            console.log(jsonResult);
            return jsonResult;
        } catch (error) {
            console.error('Error fetching session:', error);
            alert(error);
            return null;
        }
    }

    document.addEventListener('DOMContentLoaded', () => {
        if (isAdmin) {
            document.getElementById('admin-panel').style.display = 'block';

            const deleteButtons = document.querySelectorAll('.delete-btn');
            deleteButtons.forEach(button => {
                button.addEventListener('click', async (event) => {
                    const userId = event.target.getAttribute('data-id');
                    await deleteUser(userId);
                    location.reload();
                });
            });
        } else {
            document.getElementById('access-denied').style.display = 'block';
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        const deleteButtons = document.querySelectorAll('.delete-btn');

        deleteButtons.forEach(button => {
            button.addEventListener('click', function () {
                const userId = button.getAttribute('data-id');
                deleteUser(userId);
            });
        });
    });

    async function deleteUser(user_id) {
        try {
            const data = {
                user_id: user_id
            };

            const response = await fetch(`http://localhost:3000/delete-user`, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(data)
            });

            if (!response.ok) {
                let errorMessage = (await response.json()).error;
                alert(errorMessage);
                return;
            }

            alert('Użytkownik został usunięty.');
            location.reload();
        } catch (error) {
            console.error(error)
            alert(error);
        }
    }

</script>
</body>
</html>
